 从中序与后序遍历序列构造二叉树

给定两个整数数组 inorder 和 postorder ，其中 inorder 是二叉树的中序遍历， postorder 是同一棵树的后序遍历，请你构造并返回这颗 二叉树 。

示例 1:


输入：inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]
输出：[3,9,20,null,null,15,7]
示例 2:

输入：inorder = [-1], postorder = [-1]
输出：[-1]
 

提示:

1 <= inorder.length <= 3000
postorder.length == inorder.length
-3000 <= inorder[i], postorder[i] <= 3000
inorder 和 postorder 都由 不同 的值组成
postorder 中每一个值都在 inorder 中
inorder 保证是树的中序遍历
postorder 保证是树的后序遍历


🧠 一、你要记住的前提知识（关键点）
✅ 后序遍历：左 → 右 → 根
所以后序遍历数组的最后一个元素就是根节点

✅ 中序遍历：左 → 根 → 右
所以我们一旦知道根节点值，就可以用中序数组把左右子树分开
------------------------------------------------------------------------------

什么是层序遍历：
🧠 什么是层序遍历（Level Order）？
从根节点开始，一层一层从左到右输出所有节点。

比如你构建出的树是这样：

        3
       / \
      9   20
         /  \
       15    7
-------------------------------------------------
🌲 层序遍历流程：
第 0 层：3

第 1 层：9, 20

第 2 层：null, null, 15, 7

最终按层输出所有节点值（用 null 表示空子节点）：
[3, 9, 20, null, null, 15, 7]

-----------------------------------------------------------
🌳 给定的中序 + 后序 + 前序遍历：
inorder    = [9,3,15,20,7]
postorder  = [9,15,7,20,3]
preorder = [3, 9, 20, 15, 7]

----------------------------------------











