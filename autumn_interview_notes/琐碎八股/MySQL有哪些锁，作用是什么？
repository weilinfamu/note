全局锁： 锁住整个数据库实例，使数据库只读，用于全库备份。

🚪 一、MySQL 各类锁总结 + 项目场景应用
全局锁	锁住整个数据库，只读	项目部署前全库逻辑备份，使用 FLUSH TABLES WITH READ LOCK 防止数据变更造成不一致
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
表锁	锁整张表，MyISAM 默认	管理后台导出大表数据，短时间只读锁表防止写入（LOCK TABLES table_name READ）

表锁 不是只有 MyISAM 才用，所有存储引擎都可以使用表锁（如通过 LOCK TABLES 手动加锁），只是：

MyISAM 默认只支持表锁，不支持行锁。
而 InnoDB 支持更细粒度的行锁，也支持表锁（通过显式 LOCK TABLES）。

 LOCK TABLES xxx READ 的作用
✅ 允许当前线程 读取表的数据（SELECT）。

❌ 禁止当前线程以外的线程 对该表执行 SELECT/INSERT / UPDATE / DELETE / ALTER 等写操作。

❌ 当前线程自己也不能对表执行写操作（除非使用 READ LOCAL，但那又是另一种情况）。

会话 A：

LOCK TABLES product READ;
SELECT * FROM product;  -- ✅ 可以执行
UPDATE product SET price = 100 WHERE id = 1;  -- ❌ 不允许，即使是自己

🧪 实验演示（InnoDB）
会话 A：

LOCK TABLES product READ;
会话 B：

SELECT * FROM product;

-- ⏳ 会卡住，直到 A 执行 UNLOCK TABLES
因为 MySQL 的表锁是显式加锁（不区分是读还是写线程），
除非你使用 READ LOCAL 锁模式，它允许其他线程执行非正在修改的 MyISAM 表的 SELECT 操作（仅限 MyISAM）。
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
